<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Snc\RedisBundle\Doctrine\Cache\RedisCache;
use Predis\Client;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function findProducts($currentPage,$sortBy,$order) {
        
        $predis = new RedisCache();
        $predis->setRedis(new Client());
        # define cache lifetime period as 1 hour in seconds
        $cache_lifetime = 60;
      
        return $this->getEntityManager()
            ->createQuery('SELECT c FROM AppBundle:Product c '
                . 'ORDER BY c.id DESC')
            # pass predis object as driver
            ->setResultCacheDriver($predis)
            # set cache lifetime
            ->setResultCacheLifetime($cache_lifetime)
            ->getResult();
        
//        $query = $this->createQueryBuilder('p')
//            ->orderBy('p.'.$sortBy, $order)
//            ->getQuery();
//
//        // No need to manually get get the result ($query->getResult())
//
//        $paginator = $this->paginate($query, $currentPage);
//
//        return $paginator;
    }
    
    public function paginate($dql, $page = 1, $limit = 5)
    {
        $paginator = new Paginator($dql,$fetchJoinCollection=true);

        $paginator->getQuery()
            ->setFirstResult($limit * ($page - 1)) // Offset
            ->setMaxResults($limit); // Limit

        return $paginator;
    }
}
